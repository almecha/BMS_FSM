#include "BMS.h"
#include "StateMachine.h"
#include <stdio.h>

enum States
{
    BMS_IDLE,
    BMS_ACTIVE_IDLE,
    BMS_BALANCING,
    BMS_CHARGING_IDLE,
    BMS_CHARGING_CLOSING_AIR_NEG,
    BMS_CHARGING_CLOSING_PRECHARGE,
    BMS_CHARGING_PRECHARGE,
    BMS_CHARGING_CLOSING_AIR_POS,
    BMS_CHARGING_OPENING_PRECHARGE,
    BMS_CHARGING_CHARGING,
    BMS_CHARGING_RESETTING_AIRS_PRECHARGE,
    BMS_DRIVING_IDLE,
    BMS_DRIVING_CLOSING_AIR_NEG,
    BMS_DRIVING_CLOSING_PRECHARGE,
    BMS_DRIVING_PRECHARGE,
    BMS_DRIVING_CLOSING_AIR_POS,
    BMS_DRIVING_OPENING_PRECHARGE,
    BMS_DRIVING_DRIVING,
    BMS_DRIVING_RESETTING_AIRS_PRECHARGE,
    BMS_AMS_ERROR,
    BMS_IMD_ERROR,
    BMS_AMS_IMD_ERROR,
    BMS_RESETTING_ERROR,
    ST_MAX_STATES
};

// State machine state functions
STATE_DECLARE(IDLE, BMSData)
STATE_DECLARE(ACTIVE_IDLE, BMSData)
STATE_DECLARE(BALANCING, BMSData)
STATE_DECLARE(CHARGING_IDLE, BMSData)
STATE_DECLARE(CHARGING_CLOSING_AIR_NEG, BMSData)
STATE_DECLARE(CHARGING_CLOSING_PRECHARGE, BMSData)
STATE_DECLARE(CHARGING_PRECHARGE, BMSData)
STATE_DECLARE(CHARGING_CLOSING_AIR_POS, BMSData)
STATE_DECLARE(CHARGING_OPENING_PRECHARGE, BMSData)
STATE_DECLARE(CHARGING_CHARGING, BMSData)
STATE_DECLARE(CHARGING_RESETTING_AIRS_PRECHARGE, BMSData)
STATE_DECLARE(DRIVING_IDLE, BMSData)
STATE_DECLARE(DRIVING_CLOSING_AIR_NEG, BMSData)
STATE_DECLARE(DRIVING_CLOSING_PRECHARGE, BMSData)
STATE_DECLARE(DRIVING_PRECHARGE, BMSData)
STATE_DECLARE(DRIVING_CLOSING_AIR_POS, BMSData)
STATE_DECLARE(DRIVING_OPENING_PRECHARGE, BMSData)
STATE_DECLARE(DRIVING_DRIVING, BMSData)
STATE_DECLARE(DRIVING_RESETTING_AIRS_PRECHARGE, BMSData)
STATE_DECLARE(AMS_ERROR, BMSData)
STATE_DECLARE(IMD_ERROR, BMSData)
STATE_DECLARE(AMS_IMD_ERROR, BMSData)
STATE_DECLARE(RESETTING_ERROR, BMSData)

// State map to define state function order
BEGIN_STATE_MAP(BMS)
    STATE_MAP_ENTRY(BMS_IDLE)
    STATE_MAP_ENTRY(BMS_ACTIVE_IDLE)
    STATE_MAP_ENTRY(BMS_BALANCING)
    STATE_MAP_ENTRY(BMS_CHARGING_IDLE)
    STATE_MAP_ENTRY(BMS_CHARGING_CLOSING_AIR_NEG)
    STATE_MAP_ENTRY(BMS_CHARGING_CLOSING_PRECHARGE)
    STATE_MAP_ENTRY(BMS_CHARGING_PRECHARGE)
    STATE_MAP_ENTRY(BMS_CHARGING_CLOSING_AIR_POS)
    STATE_MAP_ENTRY(BMS_CHARGING_OPENING_PRECHARGE)
    STATE_MAP_ENTRY(BMS_CHARGING_CHARGING)
    STATE_MAP_ENTRY(BMS_CHARGING_RESETTING_AIRS_PRECHARGE)
    STATE_MAP_ENTRY(BMS_DRIVING_IDLE)
    STATE_MAP_ENTRY(BMS_DRIVING_CLOSING_AIR_NEG)
    STATE_MAP_ENTRY(BMS_DRIVING_CLOSING_PRECHARGE)
    STATE_MAP_ENTRY(BMS_DRIVING_PRECHARGE)
    STATE_MAP_ENTRY(BMS_DRIVING_CLOSING_AIR_POS)
    STATE_MAP_ENTRY(BMS_DRIVING_OPENING_PRECHARGE)
    STATE_MAP_ENTRY(BMS_DRIVING_DRIVING)
    STATE_MAP_ENTRY(BMS_DRIVING_RESETTING_AIRS_PRECHARGE)
    STATE_MAP_ENTRY(BMS_AMS_ERROR)
    STATE_MAP_ENTRY(BMS_IMD_ERROR)
    STATE_MAP_ENTRY(BMS_AMS_IMD_ERROR)
    STATE_MAP_ENTRY(BMS_RESETTING_ERROR)
END_STATE_MAP(BMS)

/**************EVENTS DEFINITION **************/
/*  BMS IMD error event
    *  This event is triggered when the IMD error is detected */
/*  BMS AMS error event
    *  This event is triggered when the AMS error is detected */
/*  BMS CLOSING_AIR_NEG command event
    *  This event is triggered when the CLOSING_AIR_NEG command is detected */

EVENT_DEFINE(BMS_IMD_Error_Event, BMSData){
    // Given the SetSpeed event, transition to a new state based upon
    // the current state of the state machine
    BEGIN_TRANSITION_MAP                    // - Current State -

        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_IDLE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_ACTIVE_IDLE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_BALANCING
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_CHARGING_IDLE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_CHARGING_CLOSING_AIR_NEG
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_CHARGING_CLOSING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_CHARGING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_CHARGING_CLOSING_AIR_POS
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_CHARGING_OPENING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_CHARGING_CHARGING
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_CHARGING_RESETTING_AIRS_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_DRIVING_IDLE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_DRIVING_CLOSING_AIR_NEG
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_DRIVING_CLOSING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_DRIVING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_DRIVING_CLOSING_AIR_POS
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_DRIVING_OPENING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_DRIVING_DRIVING
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_DRIVING_RESETTING_AIRS_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_AMS_ERROR
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_IMD_ERROR
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_AMS_IMD_ERROR
        TRANSITION_MAP_ENTRY(BMS_IMD_ERROR)     // BMS_RESETTING_ERROR

    END_TRANSITION_MAP(BMS, pEventData)}

EVENT_DEFINE(BMS_AMS_Error_Event, BMSData){
    // Given the SetSpeed event, transition to a new state based upon
    // the current state of the state machine
    BEGIN_TRANSITION_MAP // - Current State -

        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_IDLE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_ACTIVE_IDLE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_BALANCING
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_CHARGING_IDLE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_CHARGING_CLOSING_AIR_NEG
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_CHARGING_CLOSING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_CHARGING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_CHARGING_CLOSING_AIR_POS
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_CHARGING_OPENING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_CHARGING_CHARGING
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_CHARGING_RESETTING_AIRS_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_DRIVING_IDLE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_DRIVING_CLOSING_AIR_NEG
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_DRIVING_CLOSING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_DRIVING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_DRIVING_CLOSING_AIR_POS
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_DRIVING_OPENING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_DRIVING_DRIVING
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_DRIVING_RESETTING_AIRS_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_AMS_ERROR
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_IMD_ERROR
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_AMS_IMD_ERROR
        TRANSITION_MAP_ENTRY(BMS_AMS_ERROR)     // BMS_RESETTING_ERROR

    END_TRANSITION_MAP(BMS, pEventData)}

EVENT_DEFINE(BMS_CLOSE_AIR_NEG_REQ_Event, BMSData){
    // Given the BMS_CLOSE_AIR_NEG_REQ_Event , transition to a new state based upon
    // the current state of the state machine
    // Reentrance is permitted
    BEGIN_TRANSITION_MAP                                   // - Current State -

        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_IDLE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_ACTIVE_IDLE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_BALANCING
        TRANSITION_MAP_ENTRY(BMS_CHARGING_CLOSING_AIR_NEG) // BMS_CHARGING_IDLE
        TRANSITION_MAP_ENTRY(BMS_CHARGING_CLOSING_AIR_NEG) // BMS_CHARGING_CLOSING_AIR_NEG
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_CHARGING_CLOSING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_CHARGING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_CHARGING_CLOSING_AIR_POS
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_CHARGING_OPENING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_CHARGING_CHARGING
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_CHARGING_RESETTING_AIRS_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_DRIVING_CLOSING_AIR_NEG)  // BMS_DRIVING_IDLE
        TRANSITION_MAP_ENTRY(BMS_DRIVING_CLOSING_AIR_NEG)  // BMS_DRIVING_CLOSING_AIR_NEG
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_DRIVING_CLOSING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_DRIVING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_DRIVING_CLOSING_AIR_POS
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_DRIVING_OPENING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_DRIVING_DRIVING
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_DRIVING_RESETTING_AIRS_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_AMS_ERROR
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_IMD_ERROR
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_AMS_IMD_ERROR
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                // BMS_RESETTING_ERROR

    END_TRANSITION_MAP(BMS, pEventData)}

EVENT_DEFINE(BMS_CLOSE_AIR_POS_REQ_Event, BMSData){
    // Given the BMS_CLOSE_AIR_POS_REQ_Event , transition to a new state based upon
    // the current state of the state machine
    // Reentrance is permitted
    BEGIN_TRANSITION_MAP                                  // - Current State -

        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_IDLE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_ACTIVE_IDLE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_BALANCING
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_CHARGING_IDLE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_CHARGING_CLOSING_AIR_NEG
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_CHARGING_CLOSING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_DRIVING_CLOSING_AIR_POS) // BMS_CHARGING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_DRIVING_CLOSING_AIR_POS) // BMS_CHARGING_CLOSING_AIR_POS
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_CHARGING_OPENING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_CHARGING_CHARGING
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_CHARGING_RESETTING_AIRS_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_DRIVING_IDLE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_DRIVING_CLOSING_AIR_NEG
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_DRIVING_CLOSING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_DRIVING_CLOSING_AIR_POS) // BMS_DRIVING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_DRIVING_CLOSING_AIR_POS) // BMS_DRIVING_CLOSING_AIR_POS
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_DRIVING_OPENING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_DRIVING_DRIVING
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_DRIVING_RESETTING_AIRS_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_AMS_ERROR
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_IMD_ERROR
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_AMS_IMD_ERROR
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)               // BMS_RESETTING_ERROR

    END_TRANSITION_MAP(BMS, pEventData)}

EVENT_DEFINE(BMS_STOP_REQ_Event, BMSData)
{
    // Given the BMS_STOP_REQ_Event , transition to a new state based upon 
    // the current state of the state machine
    // Reentrance is permitted
    BEGIN_TRANSITION_MAP                                            // - Current State -

        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_IDLE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_ACTIVE_IDLE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_BALANCING
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_CHARGING_IDLE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_CHARGING_CLOSING_AIR_NEG
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_CHARGING_CLOSING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_CHARGING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_CHARGING_CLOSING_AIR_POS
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_CHARGING_OPENING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_CHARGING_RESETTING_AIRS_PRECHARGE) // BMS_CHARGING_CHARGING
        TRANSITION_MAP_ENTRY(BMS_CHARGING_RESETTING_AIRS_PRECHARGE) // BMS_CHARGING_RESETTING_AIRS_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_DRIVING_IDLE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_DRIVING_CLOSING_AIR_NEG
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_DRIVING_CLOSING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_DRIVING_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_DRIVING_CLOSING_AIR_POS
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_DRIVING_OPENING_PRECHARGE
        TRANSITION_MAP_ENTRY(BMS_DRIVING_RESETTING_AIRS_PRECHARGE)  // BMS_DRIVING_DRIVING
        TRANSITION_MAP_ENTRY(BMS_DRIVING_RESETTING_AIRS_PRECHARGE)  // BMS_DRIVING_RESETTING_AIRS_PRECHARGE
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_AMS_ERROR
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_IMD_ERROR
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_AMS_IMD_ERROR
        TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                         // BMS_RESETTING_ERROR

    END_TRANSITION_MAP(BMS, pEventData)
}

EVENT_DEFINE(BMS_CHARGE_REQ_Event, BMSData)
{
    // Given the BMS_CHARGE_REQ_Event , transition to a new state based upon 
    // the current state of the state machine
    // Reentrance is permitted
    BEGIN_TRANSITION_MAP // - Current State -

            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_IDLE
            TRANSITION_MAP_ENTRY(BMS_CHARGING_IDLE)                    // BMS_ACTIVE_IDLE
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_BALANCING
            TRANSITION_MAP_ENTRY(BMS_CHARGING_IDLE)                    // BMS_CHARGING_IDLE
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_CHARGING_CLOSING_AIR_NEG
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_CHARGING_CLOSING_PRECHARGE
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_CHARGING_PRECHARGE
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_CHARGING_CLOSING_AIR_POS
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_CHARGING_OPENING_PRECHARGE
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_CHARGING_CHARGING
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_CHARGING_RESETTING_AIRS_PRECHARGE
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_DRIVING_IDLE
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_DRIVING_CLOSING_AIR_NEG
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_DRIVING_CLOSING_PRECHARGE
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_DRIVING_PRECHARGE
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_DRIVING_CLOSING_AIR_POS
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_DRIVING_OPENING_PRECHARGE
            TRANSITION_MAP_ENTRY(BMS_DRIVING_RESETTING_AIRS_PRECHARGE) // BMS_DRIVING_DRIVING
            TRANSITION_MAP_ENTRY(BMS_DRIVING_RESETTING_AIRS_PRECHARGE) // BMS_DRIVING_RESETTING_AIRS_PRECHARGE
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_AMS_ERROR
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_IMD_ERROR
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_AMS_IMD_ERROR
            TRANSITION_MAP_ENTRY(CANNOT_HAPPEN)                        // BMS_RESETTING_ERROR

        END_TRANSITION_MAP(BMS, pEventData)
}
